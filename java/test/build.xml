<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="floodlight" default="package" basedir=".">
    <description>
        My first complete build file, including packaging and executing a Java program.
    </description>

    <property name="target" location="target"/>
    <property name="build" location="${target}/bin"/>
    <property name="build-test" location="${target}/bin-test"/>
    <property name="build-coverage" location="${target}/bin-coverage"/>
    <property name="test-output" location="${target}/test"/>
    <property name="coverage-output" location="${target}/coverage"/>
    <property name="source" location="src/main/java"/>
    <property name="resources" location="src/main/resources/"/>
    <property name="test-resources" location="src/test/resources/"/>
    <property name="source-test" location="src/test/java"/>
    <property name="python-src" location="src/main/python"/>
    <property name="docs" location="${target}/docs"/>
    <property name="mainclass" value="org.wenxueliu.test.Example"/>
    <property name="learnJava-jar" location="${target}/learnJava.jar"/>
    <property name="floodlight-test-jar" location="${target}/floodlight-test.jar"/>
    <property name="thrift.dir" value="${basedir}/src/main/thrift"/>
    <property name="thrift.out.dir" value="lib/gen-java"/>
    <property name="ant.build.javac.source" value="1.7"/>
    <property name="ant.build.javac.target" value="1.7"/>
    <property name="findbugs.home" value="../build/findbugs-2.0.2"/>
    <property name="findbugs.results" value="findbugs-results" />
    <property name="lib.dir" location="lib"/>
    <property name="classes.dir" location="build/classes"/>
    <property name="dist" location="dist"/>

    <patternset id="lib">
        <include name="mysql-connector-java-5.1.34-bin.jar"/>
        <include name="slf4j-api-1.6.4.jar"/>
        <include name="logback-classic-1.0.0.jar"/>
        <include name="logback-core-1.0.0.jar"/>
        <include name="pdfbox-1.8.9.jar"/>
        <include name="commons-logging-1.2.jar"/> <!-- pdfbox dependency -->
        <include name="fontbox-1.8.8.jar"/> <!-- pdfbox dependency -->
        <include name="derby-10.9.1.0.jar"/>
        <include name="curator-recipes-2.10.0.jar"/>
        <include name="curator-client-2.10.0.jar"/>
        <include name="curator-framework-2.10.0.jar"/>
        <include name="guava-13.0.1.jar"/>
        <include name="zookeeper-3.4.6.jar"/>
    	<include name="openflowj-2.0.0-SNAPSHOT.jar"/>
    	<include name="commons-codec-1.10.jar"/>

    	<include name="jackson-core-2.4.4.jar"/>
    	<include name="jackson-databind-2.4.4.jar"/>
    	<include name="jackson-dataformat-smile-2.4.4.jar"/>
    	<include name="jackson-annotations-2.4.4.jar"/>
    	<include name="netty-all-4.0.31.Final.jar"/>

        <!-- kyro
    	<include name="kryo-3.0.4-20151022.204923-5.jar"/>
    	<include name="objenesis-2.1.jar"/>
    	<include name="minlog-1.3-SNAPHOT.jar"/>
    	<include name="commons-lang3-3.3.2.jar"/>
        -->

    </patternset>

    <path id="classpath">
        <fileset dir="${lib.dir}">
            <patternset refid="lib"/>
            <!--
            <include name="**/*.jar"/>
            -->
        </fileset>
    </path>

    <!--
    <patternset id="lib-cobertura">
        <include name="cobertura-1.9.4.1.jar"/>
        <include name="asm-3.0.jar"/>
        <include name="asm-tree-3.0.jar"/>
        <include name="oro/jakarta-oro-2.0.8.jar"/>
        <include name="log4j-1.2.9.jar"/>
    </patternset>
    <path id="classpath-cobertura">
        <fileset dir="${lib}">
            <patternset refid="lib-cobertura"/>
    </fileset>
    </path>

    <patternset id="lib-test">
        <include name="junit-4.8.2.jar"/>
        <include name="org.easymock-3.1.jar"/>
        <include name="objenesis-1.2.jar"/>
        <include name="cglib-nodep-2.2.2.jar"/>
    </patternset>
    <path id="classpath-test">
        <fileset dir="${lib}">
            <patternset refid="lib-test"/>
            <patternset refid="lib-cobertura"/>
            <patternset refid="lib"/>
        </fileset>
    </path>
    -->

    <target name="init" description="Create the output directories">
        <tstamp/>
        <!--
        <mkdir dir="src/org/wenxueliu/test"/>
        <mkdir dir="${resources}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${lib.dir}"/>
        -->
        <mkdir dir="${build}"/>
        <mkdir dir="${target}/lib"/>
        <!--
        <mkdir dir="${build-test}"/>
        <mkdir dir="${thrift.out.dir}"/>
        <mkdir dir="${test-output}"/>
        -->
    </target>

    <target name="compile" depends="init" description="Compiles into the output directories">
        <javac includeAntRuntime="false"
            classpathref="classpath"
            srcdir="${source}"
            debug="true"
            destdir="${build}">
        </javac>
        <copy todir="${build}">
            <fileset dir="${resources}" />
        </copy>
    </target>

    <target name="package" depends="compile" description="Creates the JAR package files">
        <jar destfile="${learnJava-jar}" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="${build}"/>
            <fileset dir="${resources}"/>
            <zipgroupfileset dir="${lib.dir}">
                <patternset refid="lib"/>
            </zipgroupfileset>
        </jar>
    </target>

    <target name="clean" description="Delete the output directories">
        <delete dir="${target}"/>
    </target>

    <target name="exec" description="Running programs under Ant">
        <property name="logback.configurationFile" value="./logback.xml" />
        <java fork="true" jar="${learnJava-jar}" classpathref="classpath">
            <jvmarg value="-server"/>
            <jvmarg value="-Xms1024M"/>
            <jvmarg value="-Xmx1024M"/>
        </java>
        <!-- $ java -cp build/classes org.cheungmine.study.Main hello world . -->
        <!--
        <java classname="${mainclass}" classpath="${classes.dir}">
            <arg value="hello"/>
            <arg value="world"/>
            -->
            <!-- 
                the following arg uses the file attribute, which tells Ant to resolve 
                that attribute to an absolute file location before calling the program.
            -->
            <!-- 
            <arg file="."/>
        </java>
        -->
        <!--
        <echo level="verbose" message="running"/>
        <echo level="info" message="running"/>
        <echo level="warning" message="running"/>
        <echo level="error" message="running"/>
        -->
    </target>
    <!--
    <target name="javadoc">
        <javadoc access="protected"
            author="true"
            classpathref="classpath"
            destdir="${docs}"
            doctitle="Floodlight"
            nodeprecated="false"
            nodeprecatedlist="false"
            noindex="false"
            nonavbar="false"
            notree="false"
            source="1.6"
            sourcepath="${source}"
            splitindex="true"
            use="true"
            version="true"/>
    </target>

    <target name="findbugs-xml" depends="init,compile">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${findbugs.home}/lib/findbugs-ant.jar"/>
        <mkdir dir="${findbugs.results}"/>
        <findbugs
            home="${findbugs.home}"
            output="xml"
            excludeFilter="${basedir}/findbugs-exclude.xml"
            jvmargs="-Xmx1024m"
            outputFile="${findbugs.results}/results.xml">
           <sourcePath path="${source}" />
           <sourcePath path="${thrift.out.dir}" />
           <class location="${build}" />
           <auxClasspath>
                <path refid="classpath" />
           </auxClasspath>
        </findbugs>
    </target>

    <target name="findbugs" depends="init,compile">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${findbugs.home}/lib/findbugs-ant.jar"/>
        <mkdir dir="${findbugs.results}"/>
        <findbugs
            home="${findbugs.home}"
            output="html"
            excludeFilter="${basedir}/findbugs-exclude.xml"
            jvmargs="-Xmx1024m"
            outputFile="${findbugs.results}/results.html" >
           <sourcePath path="${source}" />
           <sourcePath path="${thrift.out.dir}" />
           <class location="${build}" />
           <auxClasspath>
                <path refid="classpath" />
           </auxClasspath>
        </findbugs>
    </target>
    -->
</project>

